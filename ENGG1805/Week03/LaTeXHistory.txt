LaTeX: a brief introduction
G J Kennedy

LaTeX is a powerful typesetting system, used for producing scientific and mathematical documents of high typographic quality. It differs from WYSIWYG tools such as FrameMaker and Word in three important ways:

you can use any text editor to create document files
formatting is achieved by means of commands embedded in the text
you have to `compile' a document before you can view it.

LaTeX is open source and very stable. It is available for most platforms, from low-specification PCs and Macs to powerful UNIX and VMS systems. 

History
Donald E Knuth designed a new typesetting program that he called TeX in about 1978. TeX has been revised continuously over the years, the most recent release being in 2002.

LaTeX is a macro package using TeX as its formatting engine that allows authors to use TeX more easily. The word LaTeX is pronounced `lay-tech' or `lah-tech' (`ch' as in Scottish `loch' or just hard `k'), not `latex' (as in rubber). In plain text, the typography is LaTeX. The title of this document in the panel shows its typeset form. 
Who uses it?
Although many people prefer WYSIWYG word processors because of their obvious ease of use, LaTeX is preferred by many authors because it produces documents that are very consistent and well formatted using specified layouts. It is especially good where complex mathematical formulae and equations are involved. 
Some publishers such as the ACM, Elsevier, IEEE and Kluwer have very strict guidelines for authors. The exact typography required is defined in the LaTeX `document classes' acmconf, elsart, IEEEconf and kluwer respectively. The correct layout for each publisher can be achieved simply by specifying the appropriate document class.  Should the author wish to submit the same article to a different publisher, it is simply a matter of choosing the appropriate document class. LaTeX ensures that the new layout meets the publishers' requirements.

Basic concepts
The main idea of LaTeX is that it allows the author to concentrate on the content of an article without having to worry about the final appearance. The author defines the basic structure of the document using formatting commands, and then the document is compiled to produce the required output. The typography and layout of the output are determined by the LaTeX document class specified. It is somewhat analogous to using a markup language such as HTML to format web pages. However, LaTeX is oriented towards printed page layout and guarantees perfect typography, at the same time preserving flexibility.

When a text doument is compiled, LaTeX produces a device-independent file (DVI). Using a viewing utility, such as Yap, the appearance of final output can be viewed. Like all computing tools, LaTeX is very fussy, and even a trivial mistake in the formatting commands can mean that no output is generated and many error messages are displayed. You then have to check the error log to find the error and correct it before recompiling the document.

A sample document
As stated already, a document is contained in a plain text file with the suffix .tex. A simple example is given below.

\documentclass{article}
\begin{document}
\title{A Latex Document}
\author{G J Kennedy} 
\maketitle
The text of the document
goes here.
\end{document}

This text file defines a short document which  can be  compiled using  LaTeX to 
produce the desired output. Notice that there are no  spelling check facilities.
Notice that each LaTeX command begins with a backslash, so this character has special meaning and can never be used simply as a character. The first line specifies the type of document. There are various standard classes, such as `article', `book' and `letter', with pre-defined features that can be customised. The third line begins the body of the document. The command \maketitle causes the title, defined above to be printed.

If this text is saved to a text file with the name doc1.tex, say, then using a cmd window it can be compiled with the command latex doc1. If there are no errors, the output file doc1.dvi will be produced. The final output can then be viewed by double clicking on the .dvi file.

Working with mathematical formulae
The real power of LaTeX is best demonstrated when it is used to produce mathematical output. The following simple examples show this.
Algebra

Calculus

Matrices

Some examples of LaTeX commands
The following table contains some common LaTeX commands that can be used with most LaTeX classes.


Latex Command	Result

\documentclass	Document class used
\title	Title definition follows
\maketitle	Title to be printed here
\section	New section
\subsection	New subsection
\verbatim	To be printed verbatim
\displaymath	Maths formulae follow

Obtaining more information
LaTeX is far more powerful and far more complex than this simple introduction. More information can be found in The Not So Short Introduction to LaTeX2e (Tobias Oetiker, 2003). There are many other sources. 




